%% Estrous histogram

triggerState = 'P';

estBins = [-3:4];
latencyMean = nan(numel(ids),numel(estBins));
propD = nan(numel(ids),numel(estBins));
propE = nan(numel(ids),numel(estBins));
propM = nan(numel(ids),numel(estBins));
propP = nan(numel(ids),numel(estBins));
sessionStop = datenum('5/15/2022');
sessionStart = datenum('3/1/2022');
latencyTrials = [];
valueTrials = [];
intervalTrials = [];
animalTrials = [];
estrousTrials = [];
for na = 1:numel(ids)
    clear thisLatencyMean thisInterval thisDay
    sessionEstrous    =  eval(sprintf('estrous_consensus.%s;',ids{na}));
    thisDates   = unique(datenum(estrous_consensus.Date));
    sessionEstrous(thisDates<sessionStart) = [];
    thisDates(thisDates<sessionStart) = [];
    sessionEstrous(thisDates>sessionStop) = [];
    thisDates(thisDates>sessionStop) = [];
    
    idx = find(strcmp(sessionEstrous,triggerState));
    idx(find(diff(idx)==1)) = [];
    thisDates = thisDates(idx); 
    thisInterval = nan(size(thisDates));
    thisLatencyMean = nan(size(thisDates,1),numel(estBins)); 
    thisDay = nan(size(thisDates,1),numel(estBins)); 
    for ns = 1:numel(idx)
        x=1;
        for nb = estBins
            thisIdx = find(strcmp(Animal,ids{na})&Dates==thisDates(ns)+nb);
            if ~isempty(thisIdx)
            thisLatencyMean(ns,x) = nanmean(Latency_thresh(thisIdx));
            if strcmp(unique(Estrous(thisIdx)),'P')
                thisDay(ns,x) = 1;
            elseif strcmp(unique(Estrous(thisIdx)),'E')
                thisDay(ns,x) = 2;
            elseif strcmp(unique(Estrous(thisIdx)),'M')
                thisDay(ns,x) = 3;
             elseif strcmp(unique(Estrous(thisIdx)),'D')
                thisDay(ns,x) = 4;
            else
                thisDay(ns,x) = NaN;      
            end
            latencyTrials = cat(1,latencyTrials,Latency_thresh(thisIdx));
            valueTrials = cat(1,valueTrials,Value(thisIdx));
            animalTrials = cat(1,animalTrials,ones(size(thisIdx)).*na);
            intervalTrials = cat(1,intervalTrials,ones(size(thisIdx)).*nb); 
            estrousTrials  = cat(1,estrousTrials,ones(size(thisIdx)).*thisDay(ns,x));
            end
            
            x=x+1;
            
        end
    end
    latencyMean(na,:) = nanmean(thisLatencyMean);
    propP(na,:) = sum(thisDay==1,1)./sum(~isnan(thisDay),1);
    propE(na,:) = sum(thisDay==2,1)./sum(~isnan(thisDay),1);
    propM(na,:) = sum(thisDay==3,1)./sum(~isnan(thisDay),1);
    propD(na,:) = sum(thisDay==4,1)./sum(~isnan(thisDay),1);
end
propE(propE==Inf) = NaN;
propM(propM==Inf) = NaN;
propP(propP==Inf) = NaN;
propD(propD==Inf) = NaN;



f='latency~value+(1+value|animal)';

clear value value_se intercept intercept_se
x=1;
for nb = (estBins)
   % for ng = 1;
   for ng = 1:max(estrousTrials)
        thisIdx = find(intervalTrials==nb&estrousTrials==ng);
       % thisIdx = find(intervalTrials==nb);
        X = table(latencyTrials(thisIdx),valueTrials(thisIdx),animalTrials(thisIdx), 'VariableNames',{'latency','value','animal'});
        try
            mdl = fitlme(X,f);
            value(ng,x) = mdl.Coefficients.Estimate(2);
            value_se(ng,x) = mdl.Coefficients.SE(2);
            intercept(ng,x) = mdl.Coefficients.Estimate(1);
            intercept_se(ng,x) = mdl.Coefficients.SE(1);
        catch
            value(ng,x) = NaN;
            value_se(ng,x) = NaN;
            intercept(ng,x) = NaN;
            intercept_se(ng,x) = NaN;
        end
    end
    x=x+1;
    
end


figure(), subplot(3,2,1); hold on 
errorbar(estBins(1:end),nanmean(latencyMean),nanstd(latencyMean)./sqrt(sum(~isnan(latencyMean),1)),'k','LineWidth',1,'CapSize',0,'LineStyle','none')
%plot(estBins(1:end-1),nanmean(latencyMean),'o','MarkerFaceColor','k','MarkerEdgeColor','none')
X = table(reshape(latencyMean,numel(latencyMean),1),'VariableNames',{'latency'});
X.interval = categorical(reshape(repmat(estBins(1:end),numel(ids),1),numel(latencyMean),1));
X.Animal = repmat([1:numel(ids)]',numel(estBins),1);
mdl = fitlme(X,'latency~interval+(1|Animal)');
anova(mdl)
% mdl = fitlm(X,'latency~interval');
% p=plot(mdl);
% p(1).Marker = 'o';
% p(1).MarkerFaceColor = 'k';
% p(1).MarkerEdgeColor = 'none';
% p(1).MarkerSize = 3;
% p(2).Color = 'k';
% p(3).Color = 'k';
% p(4).Color = 'k';

for na = 1:size(latencyMean,1)
scatter(estBins(1:end),latencyMean(na,:), 15,'MarkerFaceColor', 'k','MarkerEdgeColor','none','MarkerFaceAlpha',.5)
end
    
xlabel('Days since estrous')
ylabel('Average trial initiation latency (s)')
set(gca,'XLim',[estBins(1)-1 estBins(end)+1]);
legend('off')

subplot(3,2,5)
hold on
errorbar(estBins(1:end), nanmean(propP), nanstd(propP)./sqrt(sum(~isnan(propP))), 'Color', fmap(1,:),'CapSize',0,'LineWidth',1)
errorbar(estBins(1:end), nanmean(propE), nanstd(propE)./sqrt(sum(~isnan(propE))), 'Color', fmap(2,:),'CapSize',0,'LineWidth',1)
errorbar(estBins(1:end), nanmean(propM), nanstd(propM)./sqrt(sum(~isnan(propM))), 'Color', fmap(3,:),'CapSize',0,'LineWidth',1)

% errorbar(estBins(1:end-1), nanmean(propM+propD), nanstd(propM+propD)./sqrt(sum(~isnan(propM+propD))), 'Color', fmap(2,:),'CapSize',0,'LineWidth',1)
% errorbar(estBins(1:end-1), nanmean(propE+propP), nanstd(propE+propP)./sqrt(sum(~isnan(propE+propP))), 'Color', fmap(4,:),'CapSize',0,'LineWidth',1)

errorbar(estBins(1:end), nanmean(propD), nanstd(propD)./sqrt(sum(~isnan(propD))), 'Color', fmap(4,:),'CapSize',0,'LineWidth',1)
legend({'P';'E';'M';'D'})
%legend({'D/M'  ;'P/E'})
ylabel('Proportion of sessions')
xlabel('Days since estrous')
set(gca,'XLim',[estBins(1)-1 estBins(end)+1]);
box off
size(value)


subplot(3,2,3); hold on
for ng = 1:max(estrousTrials)
    errorbar(estBins(1:end),value(ng,:),value_se(ng,:),'Color',fmap(ng,:),'CapSize',0,'LineWidth',1)
end
%errorbar(estBins(1:end),value,value_se,'Color','k','CapSize',0,'LineWidth',1)
ylabel('Value coefficient')
xlabel('Days since estrous')
set(gca,'XLim',[estBins(1)-1 estBins(end)+1]);

% errorbar(estBins(1:end),value,value_se,'Color','k','CapSize',0,'LineWidth',1,'LineStyle','none')
% plot(estBins(1:end),value,'ok','MarkerFaceColor','k','MarkerEdgeColor','none')
% ylabel('Value coefficient')
% xlabel('Days since estrous')
% set(gca,'XLim',[estBins(1)-1 estBins(end)+1]);
% box off
% X = table(value','VariableNames',{'value'});
% X.interval = categorical(estBins(1:end)');
% mdl = fitlm(X,'value~interval');
% anova(mdl)
% p=plot(mdl);
% p(1).Marker = 'o';
% p(1).MarkerFaceColor = 'k';
% p(1).MarkerEdgeColor = 'none';
% p(1).MarkerSize = 3;
% p(2).Color = 'k';
% p(3).Color = 'k';
% p(4).Color = 'k';
% legend('off')

% figure();
% subplot(1,2,1)
% errorbar(estBins(1:end-1),value,value_se,'Color','k','CapSize',0,'LineWidth',1)
% ylabel('Value coefficient')
% xlabel('Days since estrous')
% set(gca,'XLim',[-1 estBins(end-1)+1]);
% subplot(1,2,2)
% errorbar(estBins(1:end-1),intercept,intercept_se,'Color','k','CapSize',0,'LineWidth',1)
% ylabel('Intercept')
% xlabel('Days since estrous')
% set(gca,'XLim',[-1 estBins(end-1)+1]);


%% Estrous interval

estBins = [0:15,50];
latencyMean = nan(numel(ids),numel(estBins)-1);
propD = nan(numel(ids),numel(estBins)-1);
propE = nan(numel(ids),numel(estBins)-1);
propM = nan(numel(ids),numel(estBins)-1);
propP = nan(numel(ids),numel(estBins)-1);
sessionStop = datenum('5/15/2022');
sessionStart = datenum('3/1/2022');
latencyTrials = [];
valueTrials = [];
intervalTrials = [];
animalTrials = [];
for na = 1:numel(ids)
    clear thisLatencyMean thisInterval thisDay
    sessionEstrous    =  eval(sprintf('estrous_consensus.%s;',ids{na}));
    thisDates   = unique(datenum(estrous_consensus.Date));
    idx            = find(cellfun(@(x) isempty(x),  eval(sprintf('estrous_consensus.%s;',ids{na}))));     
    thisDates(idx) = [];
    sessionEstrous(idx) = [];
    sessionEstrous(thisDates<sessionStart) = [];
    thisDates(thisDates<sessionStart) = [];
        sessionEstrous(thisDates>sessionStop) = [];
    thisDates(thisDates>sessionStop) = [];
    
    breaks = diff(thisDates);
    breaks = cat(1,1,find(breaks>1)+1,numel(thisDates));
    thisInterval{na} = nan(size(thisDates));
    thisLatencyMean{na} = nan(size(thisDates)); 
    thisDay = cell(size(thisDates));
    for nb = 2:numel(breaks)
        firstEstrous   = find(strcmp(sessionEstrous(breaks(nb-1):breaks(nb)),'E'),1,'first')+breaks(nb-1)-1;
        for ns = firstEstrous:breaks(nb)-1
            thisIdx = find(strcmp(Animal,ids{na})&Dates==thisDates(ns));
            if ~isempty(thisIdx)
                
            prevEstrous = find(strcmp(sessionEstrous(1:ns),'E'),1,'last');
            thisLatencyMean{na}(ns) = nanmean(Latency_thresh(thisIdx));
            thisInterval{na}(ns) = ns-prevEstrous;
            latencyTrials = cat(1,latencyTrials,Latency_thresh(thisIdx));
            valueTrials = cat(1,valueTrials,Value(thisIdx));
            thisDay(ns) = unique(Estrous(thisIdx));
            intervalTrials = cat(1,intervalTrials,ones(size(thisIdx)).*thisInterval{na}(ns));
            animalTrials = cat(1,animalTrials,ones(size(thisIdx)).*na);
            end
        end
    end
   
    [~,~,thisBins] = histcounts(thisInterval{na},estBins);
    
    for nb = 1:numel(estBins)-1
       latencyMean(na,nb) = nanmean(thisLatencyMean{na}(thisBins==nb));
       binIdx = find(thisBins==nb);
       binIdx = binIdx(ismember(binIdx,idx));
       propD(na,nb) = sum(strcmp(thisDay(thisBins==nb),'D'))/sum(thisBins==nb); 
       propE(na,nb) = sum(strcmp(thisDay(thisBins==nb),'E'))/sum(thisBins==nb); 
       propM(na,nb) = sum(strcmp(thisDay(thisBins==nb),'M'))/sum(thisBins==nb);  
       propP(na,nb) = sum(strcmp(thisDay(thisBins==nb),'P'))/sum(thisBins==nb); 
    end
end
[~,~,intervalTrials2] = histcounts(intervalTrials,estBins); 


f='latency~value+(1+value|animal)';


clear value value_se intercept intercept_se
for nb = 1:numel(estBins)-1
    thisIdx = find(intervalTrials2==nb);
    X = table(latencyTrials(thisIdx),valueTrials(thisIdx),animalTrials(thisIdx), 'VariableNames',{'latency','value','animal'});
    try
        mdl = fitlme(X,f);
        value(nb) = mdl.Coefficients.Estimate(2);
        value_se(nb) = mdl.Coefficients.SE(2);
        intercept(nb) = mdl.Coefficients.Estimate(1);
        intercept_se(nb) = mdl.Coefficients.SE(1);
    catch
        value(nb) = NaN;
        value_se(nb) = NaN;
        intercept(nb) = NaN;
        intercept_se(nb) = NaN;
    end
end


figure(), subplot(3,2,1); hold on 
errorbar(estBins(1:end-1),nanmean(latencyMean),nanstd(latencyMean)./sqrt(sum(~isnan(latencyMean),1)),'k','LineWidth',1,'CapSize',0,'LineStyle','none')
%plot(estBins(1:end-1),nanmean(latencyMean),'o','MarkerFaceColor','k','MarkerEdgeColor','none')
X = table(reshape(latencyMean,numel(latencyMean),1),'VariableNames',{'latency'});
X.interval = reshape(repmat(estBins(1:end-1),numel(ids),1),numel(latencyMean),1);
X.Animal = repmat([1:numel(ids)]',numel(estBins)-1,1);
mdl = fitlme(X,'latency~interval+(1|Animal)') 
X = table(reshape(latencyMean,numel(latencyMean),1),'VariableNames',{'latency'});
X.interval = reshape(repmat(estBins(1:end-1),numel(ids),1),numel(latencyMean),1);
X.Animal = repmat([1:numel(ids)]',numel(estBins)-1,1);
mdl = fitlm(X,'latency~interval');
p=plot(mdl);
p(1).Marker = 'o';
p(1).MarkerFaceColor = 'k';
p(1).MarkerEdgeColor = 'none';
p(1).MarkerSize = 3;
p(2).Color = 'k';
p(3).Color = 'k';
p(4).Color = 'k';

% for na = 1:size(latencyMean,1)
% scatter(estBins(1:end-1),latencyMean(na,:), 15,'MarkerFaceColor', 'k','MarkerEdgeColor','none','MarkerFaceAlpha',.5)
% end
    
xlabel('Days since estrous')
ylabel('Average trial initiation latency (s)')
set(gca,'XLim',[-1 estBins(end-1)+1]);
legend('off')

subplot(3,2,5)
hold on
errorbar(estBins(1:end-1), nanmean(propP), nanstd(propP)./sqrt(sum(~isnan(propP))), 'Color', fmap(1,:),'CapSize',0,'LineWidth',1)
errorbar(estBins(1:end-1), nanmean(propE), nanstd(propE)./sqrt(sum(~isnan(propE))), 'Color', fmap(2,:),'CapSize',0,'LineWidth',1)
errorbar(estBins(1:end-1), nanmean(propM), nanstd(propM)./sqrt(sum(~isnan(propM))), 'Color', fmap(3,:),'CapSize',0,'LineWidth',1)

% errorbar(estBins(1:end-1), nanmean(propM+propD), nanstd(propM+propD)./sqrt(sum(~isnan(propM+propD))), 'Color', fmap(2,:),'CapSize',0,'LineWidth',1)
% errorbar(estBins(1:end-1), nanmean(propE+propP), nanstd(propE+propP)./sqrt(sum(~isnan(propE+propP))), 'Color', fmap(4,:),'CapSize',0,'LineWidth',1)

errorbar(estBins(1:end-1), nanmean(propD), nanstd(propD)./sqrt(sum(~isnan(propD))), 'Color', fmap(4,:),'CapSize',0,'LineWidth',1)
legend({'P';'E';'M';'D'})
%legend({'D/M';'P/E'})
ylabel('Proportion of sessions')
xlabel('Days since estrous')
set(gca,'XLim',[-1 estBins(end-1)+1]);
box off



subplot(3,2,3); hold on
errorbar(estBins(1:end-1),value,value_se,'Color','k','CapSize',0,'LineWidth',1,'LineStyle','none')
plot(estBins(1:end-1),value,'ok','MarkerFaceColor','k','MarkerEdgeColor','none')
ylabel('Value coefficient')
xlabel('Days since estrous')
set(gca,'XLim',[-1 estBins(end-1)+1]);
box off
X = table(value','VariableNames',{'value'});
X.interval = estBins(1:end-1)';
mdl = fitlm(X,'value~interval');
p=plot(mdl);
p(1).Marker = 'o';
p(1).MarkerFaceColor = 'k';
p(1).MarkerEdgeColor = 'none';
p(1).MarkerSize = 3;
p(2).Color = 'k';
p(3).Color = 'k';
p(4).Color = 'k';
legend('off')
% figure();
% subplot(1,2,1)
% errorbar(estBins(1:end-1),value,value_se,'Color','k','CapSize',0,'LineWidth',1)
% ylabel('Value coefficient')
% xlabel('Days since estrous')
% set(gca,'XLim',[-1 estBins(end-1)+1]);
% subplot(1,2,2)
% errorbar(estBins(1:end-1),intercept,intercept_se,'Color','k','CapSize',0,'LineWidth',1)
% ylabel('Intercept')
% xlabel('Days since estrous')
% set(gca,'XLim',[-1 estBins(end-1)+1]);

%% Inter estrous interval


estBins = [1:2:16,50];
latencyMean = nan(numel(ids),numel(estBins)-1);
latencyTrials = [];
valueTrials = [];
intervalTrials = [];
animalTrials = [];
for na = 1:numel(ids)
    clear thisLatencyMean thisInterval
    thisIdx        = find(strcmp(Animal,ids{na})&Dates>=sessionStart);
    sessionEstrous    =  eval(sprintf('estrous_consensus.%s;',ids{na}));
    thisDates   = unique(datenum(estrous_consensus.Date));
    idx            = find(cellfun(@(x) isempty(x),  eval(sprintf('estrous_consensus.%s;',ids{na}))));     
    thisDates(idx) = [];
    sessionEstrous(idx) = [];
    breaks = diff(thisDates);
    breaks = cat(1,1,find(breaks>1)+1,thisDates(end));
    thisInterval = nan(size(thisDates));
    thisLatencyMean = nan(size(thisDates)); 
    
    for nb = 2:numel(breaks)
                firstEstrous   = find(strcmp(sessionEstrous(breaks(nb-1):breaks(nb)),'E'),1,'first')+breaks(nb-1)-1;
                lastEstrous   = find(strcmp(sessionEstrous(breaks(nb-1):breaks(nb)),'E'),1,'last')+breaks(nb-1)-1;

    for ns = firstEstrous:lastEstrous
        thisIdx = find(strcmp(Animal,ids{na})&Dates==thisDates(ns));
        prevEstrous = find(strcmp(sessionEstrous(1:ns),'E'),1,'last');
        nextEstrous = find(strcmp(sessionEstrous(ns:end),'E'),1,'first');
        thisLatencyMean(ns) = nanmean(Latency_thresh(thisIdx));
        thisInterval(ns) = nextEstrous-1+ns-prevEstrous;
        thisDay(ns) = thisDates(ns); 
        latencyTrials = cat(1,latencyTrials,Latency_thresh(thisIdx));
        valueTrials = cat(1,valueTrials,Value(thisIdx));
        intervalTrials = cat(1,intervalTrials,ones(size(thisIdx)).*thisInterval(ns));
        animalTrials = cat(1,animalTrials,ones(size(thisIdx)).*na);
    end
    end
   
    thisLatencyMean(1:firstEstrous-1) = [];
    thisInterval(1:firstEstrous-1) = [];
    
    [~,~,thisBins] = histcounts(thisInterval,estBins);
    for nb = 1:numel(estBins)-1
       latencyMean(na,nb) = nanmean(thisLatencyMean(thisBins==nb)); 
    end

end
figure(), errorbar(estBins(1:end-1),nanmean(latencyMean),nanstd(latencyMean)./sqrt(sum(~isnan(latencyMean),1)),'k','LineWidth',1)
xlabel('inter-estrous interval (days)')
ylabel('Average trial initiation latency (s)')
set(gca,'XLim',[-1 estBins(end-1)+1]);
f='latency~value+(1+value|animal)';
clear value value_se intercept intercept_se
for nb = 1:numel(estBins)-1
    thisIdx = find(intervalTrials==nb);
    try
        X = table(latencyTrials(thisIdx),valueTrials(thisIdx),animalTrials(thisIdx), 'VariableNames',{'latency','value','animal'});
        mdl = fitlme(X,f);
        value(nb) = mdl.Coefficients.Estimate(2);
        value_se(nb) = mdl.Coefficients.SE(2);
        intercept(nb) = mdl.Coefficients.Estimate(1);
        intercept_se(nb) = mdl.Coefficients.SE(1);
    catch
        value(nb) = nan;
        value_se(nb) = nan;
        intercept(nb) = nan;
        intercept_se(nb) = nan;
    end
end

figure();
subplot(1,2,1)
errorbar(estBins(1:end-1),value,value_se,'Color','k','CapSize',0,'LineWidth',1)
ylabel('Value coefficient')
xlabel('inter-estrous interval (days)')
set(gca,'XLim',[-1 estBins(end-1)+1]);
subplot(1,2,2)
errorbar(estBins(1:end-1),intercept,intercept_se,'Color','k','CapSize',0,'LineWidth',1)
ylabel('Intercept')
xlabel('inter-estrous interval (days)')
set(gca,'XLim',[-1 estBins(end-1)+1]);

%% state by state regression
groups = {'D';'P';'E';'M'};
%groups = {'PE';'DM'};
f = 'Latency ~ Value + (1+Value|Animal)';
sessionStart = datenum('5/9/2022');
sessionStop = datenum('5/15/2022');
for ng = 1:numel(groups)
    if numel(groups{ng})>1
        idx = find(Dates>=sessionStart&Dates<=sessionStop&(strcmp(Estrous,groups{ng}(1))|strcmp(Estrous,groups{ng}(2))));
    else
    idx = find(Dates>=sessionStart&Dates<=sessionStop&strcmp(Estrous,groups{ng}));
    end
    X = table(Latency_thresh(idx), Value(idx), categorical(Animal(idx)), 'VariableNames',{'Latency';'Value';'Animal'});
    mdl = fitlme(X,f); 
    fits.value(ng) = mdl.Coefficients.Estimate(2);
    fits.value_se(ng) = mdl.Coefficients.SE(2);
    fits.intercept(ng) = mdl.Coefficients.Estimate(1);
    fits.intercept_se(ng) = mdl.Coefficients.SE(1);
   
    [re, renames] = randomEffects(mdl);
    thisIds = unique(renames.Level);
    for na = 1:numel(thisIds)
       fits.re_value{ng}(na) = re(strcmp(renames.Level,thisIds{na})&strcmp(renames.Name,'Value'))+fits.value(ng); 
       fits.re_intercept{ng}(na) = re(strcmp(renames.Level,thisIds{na})&strcmp(renames.Name,'(Intercept)'))+fits.intercept(ng);
    end
end

figure(); 
subplot(1,2,1); hold on
for ng = 1:numel(groups)
   errorbar(ng,fits.value(ng),fits.value_se(ng),'o','Color',fmap(ng,:),'MarkerFaceColor',fmap(ng,:),'MarkerEdgeColor','none','LineWidth',1)
    
end
set(gca,'XLim',[0 numel(groups)+1],'XTick',1:numel(groups),'XTickLabel',groups)
xlabel('Estrous stage')
ylabel('Value coefficient')
subplot(1,2,2); hold on
for ng = 1:numel(groups)
   errorbar(ng,fits.intercept(ng),fits.intercept_se(ng),'o','Color',fmap(ng,:),'MarkerFaceColor',fmap(ng,:),'MarkerEdgeColor','none','LineWidth',1)
    
end
set(gca,'XLim',[0 numel(groups)+1],'XTick',1:numel(groups),'XTickLabel',groups)
xlabel('Estrous stage')
ylabel('Intercept')

figure();
subplot(1,2,1); hold on
for na = 1:numel(ids)
for ng = 1:numel(groups)
   scatter(ones(size(fits.re_value{ng})).*ng, fits.re_value{ng},20,'MarkerFaceColor',fmap(ng,:),'MarkerEdgeColor','none')    
   aplot(ng) = fits.re_value{ng}(na);
end
b=plot(1:numel(groups), aplot,'Color',[.7 .7 .7]);
uistack(b,'bottom')
end
set(gca,'XLim',[0 numel(groups)+1],'XTick',1:numel(groups),'XTickLabel',groups)
xlabel('Estrous stage')
ylabel('Value coefficient')

subplot(1,2,2); hold on
for na = 1:numel(ids)
for ng = 1:numel(groups)
   scatter(ones(size(fits.re_intercept{ng})).*ng, fits.re_intercept{ng},20,'MarkerFaceColor',fmap(ng,:),'MarkerEdgeColor','none')    
   aplot(ng) = fits.re_intercept{ng}(na);
end
b=plot(1:numel(groups), aplot,'Color',[.7 .7 .7]);
uistack(b,'bottom')
end
set(gca,'XLim',[0 numel(groups)+1],'XTick',1:numel(groups),'XTickLabel',groups)
xlabel('Estrous stage')
ylabel('Intercept')

